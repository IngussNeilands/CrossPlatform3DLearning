CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(game)

if(WIN32)
FIND_PACKAGE(Boost COMPONENTS date_time REQUIRED)
else()
FIND_PACKAGE(Boost REQUIRED)
endif()

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})

if (WIN32)
LINK_LIBRARIES(
               ${Boost_DATE_TIME_LIBRARY}
              )
endif()

FIND_PACKAGE(SDL REQUIRED)

IF(NOT SDL_FOUND)
	MESSAGE(FATAL ERROR "SDL not found!")
ENDIF(NOT SDL_FOUND)

INCLUDE_DIRECTORIES(${SDL_INCLUDE_DIR})

LINK_LIBRARIES(${SDL_LIBRARY})

FIND_PACKAGE(OpenGL REQUIRED)
INCLUDE_DIRECTORIES(${OpenGL_INCLUDE_DIRS})
LINK_DIRECTORIES(${OpenGL_LIBRARY_DIRS})
ADD_DEFINITIONS(${OpenGL_DEFINITIONS})
IF(NOT OPENGL_FOUND)
    MESSAGE(ERROR " OPENGL not found!")
ENDIF(NOT OPENGL_FOUND)

find_package(GLEW REQUIRED)
IF(NOT GLEW_FOUND)
   MESSAGE(ERROR "GLEW not found!")
ENDIF(NOT GLEW_FOUND)
INCLUDE_DIRECTORIES(${GLEW_INCLUDE_PATH})
MESSAGE(${GLEW_LIBRARIES})

ADD_EXECUTABLE(game main.cpp GameLog.cpp Model.cpp GameLogic.cpp
 WorldObject.cpp Character.cpp 
 PlayerView.cpp Renderer.cpp RendererOpenGL14.cpp RendererOpenGL33.cpp GameException.cpp
 )

ADD_SUBDIRECTORY(UnitTesting)

TARGET_LINK_LIBRARIES(game ${OPENGL_LIBRARIES} ${GLEW_LIBRARIES}) 
